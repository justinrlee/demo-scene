SET 'auto.offset.reset'='earliest';

CREATE STREAM CUSTOMER_ACTIVITY_STREAM
(
    ACTIVITY_ID INTEGER,
    IP_ADDRESS STRING,
    CUSTOMER_ID INTEGER,
    ACTIVITY_TYPE STRING,
    PROPENSITY_TO_BUY DOUBLE
)
WITH (
    KAFKA_TOPIC = 'CUSTOMER_ACTIVITY_STREAM',
    VALUE_FORMAT = 'JSON'
);

CREATE STREAM CUSTOMER_ACTIVITY_STREAM_MOD
WITH (
    KAFKA_TOPIC = 'CUSTOMER_ACTIVITY_STREAM_MOD',
    VALUE_FORMAT = 'AVRO'
) AS
SELECT
    ACTIVITY_ID,
    IP_ADDRESS,
    CAST(CUSTOMER_ID AS STRING) AS CUSTOMER_ID_STR,
    ACTIVITY_TYPE,
    PROPENSITY_TO_BUY
FROM CUSTOMER_ACTIVITY_STREAM;

CREATE STREAM CUSTOMER_ACTIVITY_STREAM_KEY
WITH (
    KAFKA_TOPIC = 'CUSTOMER_ACTIVITY_STREAM_KEY',
    VALUE_FORMAT = 'AVRO'
) AS
SELECT
    *
FROM CUSTOMER_ACTIVITY_STREAM_MOD
PARTITION BY CUSTOMER_ID_STR;

CREATE STREAM CUSTOMERS_STREAM
(
    CUSTOMER_ID INTEGER,
    FIRST_NAME STRING,
    LAST_NAME STRING,
    EMAIL STRING,
    GENDER STRING,
    INCOME INTEGER,
    FICO INTEGER
)
WITH (
    KAFKA_TOPIC = 'CUSTOMERS_STREAM',
    VALUE_FORMAT = 'JSON'
);

CREATE STREAM "CUSTOMERS_STREAM_MOD"
WITH (
    KAFKA_TOPIC = 'CUSTOMERS_STREAM_MOD',
    VALUE_FORMAT = 'AVRO'
) AS 
SELECT 
    CAST(CUSTOMER_ID AS STRING) AS CUSTOMER_ID_STR,
    FIRST_NAME,
    LAST_NAME,
    EMAIL,
    GENDER,
    INCOME,
    FICO
FROM CUSTOMERS_STREAM;

CREATE STREAM "CUSTOMERS_STREAM_KEY"
WITH (
    KAFKA_TOPIC = 'CUSTOMERS_STREAM_KEY',
    VALUE_FORMAT = 'AVRO'
) AS 
SELECT 
    *
FROM CUSTOMERS_STREAM_MOD
PARTITION BY CUSTOMER_ID_STR;

CREATE TABLE CUSTOMERS_TABLE
(
    CUSTOMER_ID_STR STRING PRIMARY KEY
)
WITH (
    KAFKA_TOPIC = 'CUSTOMERS_STREAM_KEY',
    VALUE_FORMAT = 'AVRO'
);

CREATE TABLE CUSTOMERS_TABLE_LOOKUP
AS 
SELECT 
    CUSTOMER_ID_STR,
    COLLECT_SET(FIRST_NAME) AS FN_SET,
    COLLECT_SET(LAST_NAME) AS LN_SET,
    COLLECT_SET(EMAIL) AS EMAIL_SET,
    COLLECT_SET(GENDER) AS GENDER_SET,
    COLLECT_SET(INCOME) AS INCOME_SET,
    COLLECT_SET(FICO) AS FICO_SET
FROM CUSTOMERS_STREAM_KEY
GROUP BY CUSTOMER_ID_STR;

CREATE STREAM OFFERS_STREAM
(
    OFFER_ID INTEGER,
    OFFER_NAME STRING,
    OFFER_URL STRING
)
WITH (
    KAFKA_TOPIC = 'OFFERS_STREAM',
    VALUE_FORMAT = 'JSON'
);

CREATE STREAM OFFERS_STREAM_MOD
WITH (
    KAFKA_TOPIC = 'OFFERS_STREAM_MOD',
    VALUE_FORMAT = 'AVRO'
) AS
SELECT 
    CAST(OFFER_ID AS STRING) AS OFFER_ID_STR,
    OFFER_NAME,
    OFFER_URL
FROM OFFERS_STREAM;

CREATE STREAM OFFERS_STREAM_KEY
WITH (
    KAFKA_TOPIC = 'OFFERS_STREAM_KEY',
    VALUE_FORMAT = 'AVRO'
) AS
SELECT 
    *
FROM OFFERS_STREAM_MOD
PARTITION BY OFFER_ID_STR;

CREATE TABLE OFFERS_TABLE
(
    OFFER_ID_STR STRING PRIMARY KEY,
    OFFER_NAME STRING,
    OFFER_URL STRING
)
WITH (
    KAFKA_TOPIC = 'OFFERS_STREAM_KEY',
    VALUE_FORMAT = 'AVRO'
);

CREATE STREAM NEXT_BEST_OFFER
WITH (
    KAFKA_TOPIC = 'NEXT_BEST_OFFER',
    VALUE_FORMAT = 'AVRO'
) AS
SELECT 
cask.ACTIVITY_ID,
cask.CUSTOMER_ID_STR as CUSTOMER_ID_STR,
cask.PROPENSITY_TO_BUY,
cask.ACTIVITY_TYPE,
ct.INCOME,
ct.FICO,
CASE
    WHEN ct.INCOME > 100000 AND ct.FICO < 700 AND cask.PROPENSITY_TO_BUY < 0.9 THEN '1'
    WHEN ct.INCOME < 50000 AND cask.PROPENSITY_TO_BUY < 0.9 THEN '2'
    WHEN ct.INCOME >= 50000 AND ct.FICO >= 600 AND cask.PROPENSITY_TO_BUY < 0.9 THEN '3'
    WHEN ct.INCOME > 100000 AND ct.FICO >= 700 AND cask.PROPENSITY_TO_BUY < 0.9 THEN '4'
    ELSE '5'
END AS OFFER_ID_STR 
FROM CUSTOMER_ACTIVITY_STREAM_KEY cask
LEFT OUTER JOIN CUSTOMERS_TABLE ct
ON cask.CUSTOMER_ID_STR = ct.CUSTOMER_ID_STR;

CREATE STREAM NEXT_BEST_OFFER_LOOKUP
WITH (
    KAFKA_TOPIC = 'NEXT_BEST_OFFER_LOOKUP',
    VALUE_FORMAT = 'AVRO'
) AS
SELECT
    nbo.ACTIVITY_ID,
    nbo.CUSTOMER_ID_STR,
    nbo.PROPENSITY_TO_BUY,
    nbo.ACTIVITY_TYPE,
    nbo.INCOME,
    nbo.FICO,
    nbo.OFFER_ID_STR,
    ot.OFFER_NAME,
    ot.OFFER_URL
FROM NEXT_BEST_OFFER nbo
INNER JOIN OFFERS_TABLE ot
ON nbo.OFFER_ID_STR = ot.OFFER_ID_STR EMIT CHANGES;

CREATE TABLE NEXT_BEST_OFFER_LOOKUP_PULL
AS SELECT
    ACTIVITY_ID,
    COLLECT_SET(CUSTOMER_ID_STR) AS CUSTOMER_ID_STR_SET,
    COLLECT_SET(PROPENSITY_TO_BUY) AS PROPENSITY_TO_BUY_SET,
    COLLECT_SET(ACTIVITY_TYPE) AS ACTIVITY_TYPE_SET,
    COLLECT_SET(INCOME) AS INCOME_SET,
    COLLECT_SET(FICO) AS FICO_SET,
    COLLECT_SET(OFFER_NAME) AS OFFER_NAME_SET,
    COLLECT_SET(OFFER_URL) AS OFFER_URL
FROM NEXT_BEST_OFFER_LOOKUP
GROUP BY ACTIVITY_ID;